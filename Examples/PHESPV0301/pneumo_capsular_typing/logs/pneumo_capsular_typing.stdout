2016-05-06 16:16:56,702
******** Creating reference_fasta_fileerence index ********
2016-05-06 16:17:20,694
Settings:
  Output files: "/home/georgia/repositories/PneumoCaT/Examples/PHESPV0301/pneumo_capsular_typing/tmp/reference.fasta.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /home/georgia/repositories/PneumoCaT/Examples/PHESPV0301/pneumo_capsular_typing/tmp/reference.fasta
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 469199
Using parameters --bmax 351900 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 351900 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:01
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 234599 (target: 351899)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 137017
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 137018
Getting block 2 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 221349
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 221350
Getting block 3 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 280417
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 280418
Getting block 4 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 283051
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 283052
Getting block 5 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 95294
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 95295
Getting block 6 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 318723
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 318724
Getting block 7 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 327515
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 327516
Getting block 8 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 213425
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 213426
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 611858
fchr[G]: 890441
fchr[T]: 1263695
fchr[$]: 1876798
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4821905 bytes to primary EBWT file: /home/georgia/repositories/PneumoCaT/Examples/PHESPV0301/pneumo_capsular_typing/tmp/reference.fasta.1.bt2
Wrote 469204 bytes to secondary EBWT file: /home/georgia/repositories/PneumoCaT/Examples/PHESPV0301/pneumo_capsular_typing/tmp/reference.fasta.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1876798
    bwtLen: 1876799
    sz: 469200
    bwtSz: 469200
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 117300
    offsSz: 469200
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 9775
    numLines: 9775
    ebwtTotLen: 625600
    ebwtTotSz: 625600
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:03
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 469199
Using parameters --bmax 351900 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 351900 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:01
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 2; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 234599 (target: 351899)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 98126
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 98127
Getting block 2 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 343772
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 343773
Getting block 3 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 307047
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 307048
Getting block 4 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 246534
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 246535
Getting block 5 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 296286
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 296287
Getting block 6 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 213997
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 213998
Getting block 7 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 217018
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 217019
Getting block 8 of 8
  Reserving size (351900) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 154011
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 154012
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 611858
fchr[G]: 890441
fchr[T]: 1263695
fchr[$]: 1876798
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4821905 bytes to primary EBWT file: /home/georgia/repositories/PneumoCaT/Examples/PHESPV0301/pneumo_capsular_typing/tmp/reference.fasta.rev.1.bt2
Wrote 469204 bytes to secondary EBWT file: /home/georgia/repositories/PneumoCaT/Examples/PHESPV0301/pneumo_capsular_typing/tmp/reference.fasta.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1876798
    bwtLen: 1876799
    sz: 469200
    bwtSz: 469200
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 117300
    offsSz: 469200
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 9775
    numLines: 9775
    ebwtTotLen: 625600
    ebwtTotSz: 625600
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:21

2016-05-06 16:17:20,694
******** Running bowtie to generate sam file ********
2016-05-06 16:24:12,922
1655292 reads; of these:
  1655292 (100.00%) were paired; of these:
    1643996 (99.32%) aligned concordantly 0 times
    2605 (0.16%) aligned concordantly exactly 1 time
    8691 (0.53%) aligned concordantly >1 times
    ----
    1643996 pairs aligned concordantly 0 times; of these:
      5831 (0.35%) aligned discordantly 1 time
    ----
    1638165 pairs aligned 0 times concordantly or discordantly; of these:
      3276330 mates make up the pairs; of these:
        3194543 (97.50%) aligned 0 times
        4472 (0.14%) aligned exactly 1 time
        77315 (2.36%) aligned >1 times
3.51% overall alignment rate

2016-05-06 16:24:40,759
******** Convert sam to bam ********
2016-05-06 16:25:56,682
[samopen] SAM header is present: 94 sequences.

2016-05-06 16:25:56,682
******** Sort the bam file ********
2016-05-06 16:28:23,848
[bam_sort_core] merging from 3 files...

2016-05-06 16:28:23,848
******** Index the BAM file ********
